//- Define Header Hero (data:post requerido) (consume opciones de Blog1)
//- @author zkreations
//- @param {string} [class] - Clases adicionales
//- @param {string} [titleClass] - Clases adicionales para tÃ­tulos
//- @param {string} [metaClass] - Clases adicionales para metadatos

b:includable(id='post:hero')
  b:with(value='data:post.enclosures first (e => e.mimeType in {"video","video/mp4"})' var='cover')
    b:with(value='data:post.featuredImage ?: data:const.image', var='postImage')
      b:if(cond='data:cover.url')
        video.hero-image(playsinline="playsinline" expr:poster="data:postImage" autoplay="autoplay" muted="muted" loop="loop" expr:src="data:cover.url")
        b:else
        b:include(name='@:image', data='{ class: "hero-image", src: data:postImage, alt: data:post.title.escaped, srcset: [400,780,1280], sizes: "(min-width: 1000px) 1280px, (min-width: 720px) 780px, 400px", ratio: "16:9", height: 720, width: 1280 }')

  .sy-1.relative.z-10
    b:class(cond='data:class', expr:name='data:class')
    h1.hero-meta.article-title.color-inverse.fw-500.font-primary
      b:class(cond='data:titleClass', expr:name='data:titleClass')
      b:eval(expr='data:post.title.escaped != "" ? data:post.title.escaped : data:messages.noTitle')

    .hero-meta.article-meta.flex.g-1.flex-wrap.color-inverse
      b:class(expr:name='data:metaClass ?: "items-center justify-center"')
      b:include(name='post:meta', data='{ show: data:widgets.Blog1.allBylineItems }')
